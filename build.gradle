plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'jacoco'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
  implementation 'org.apache.hadoop:hadoop-core:1.2.1'
}

publishing {
	publications {
		maven(MavenPublication) {
			from(components.java)
		}
	}
}

group = 'word-count'
version = '0.0.1-SNAPSHOT'
description = 'word-count'
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

task wordcount(type: JavaExec) {
    main = 'wordcount.WordCount'
    classpath = sourceSets.main.runtimeClasspath
    args = [project.property('input'), project.property('output')]
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required.set(true)
        csv.required.set(true)
        html.required.set(true)
    }
}

jar {
    archiveClassifier = ''
    enabled = false
}